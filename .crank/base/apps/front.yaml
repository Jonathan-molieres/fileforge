# ██████╗ ███████╗██████╗ ██╗      ██████╗ ██╗   ██╗███╗   ███╗███████╗███╗   ██╗████████╗
# ██╔══██╗██╔════╝██╔══██╗██║     ██╔═══██╗╚██╗ ██╔╝████╗ ████║██╔════╝████╗  ██║╚══██╔══╝
# ██║  ██║█████╗  ██████╔╝██║     ██║   ██║ ╚████╔╝ ██╔████╔██║█████╗  ██╔██╗ ██║   ██║
# ██║  ██║██╔══╝  ██╔═══╝ ██║     ██║   ██║  ╚██╔╝  ██║╚██╔╝██║██╔══╝  ██║╚██╗██║   ██║
# ██████╔╝███████╗██║     ███████╗╚██████╔╝   ██║   ██║ ╚═╝ ██║███████╗██║ ╚████║   ██║
# ╚═════╝ ╚══════╝╚═╝     ╚══════╝ ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝
apiVersion: apps/v1
kind: Deployment
metadata:
    name: front-deployment
    labels:
        app: front
spec:
    selector:
        matchLabels:
            app: front
    strategy:
        type: RollingUpdate
    replicas: 1
    template:
        metadata:
            labels:
                app: front
        spec:
            containers:
                - name: front-pod
                  image: ${CONTAINER_REGISTRY}/front:${DEPLOY_TAG}
                  imagePullPolicy: Always
                  envFrom:
                      - configMapRef:
                            name: config
                      - secretRef:
                            name: secrets
                  ports:
                      - containerPort: 8080
                  resources:
                      requests:
                          memory: '500Mi'
                          cpu: '0.1'
                      limits:
                          memory: '1000Mi'
                          cpu: '0.2'

---
# ███████╗███████╗██████╗ ██╗   ██╗██╗ ██████╗███████╗
# ██╔════╝██╔════╝██╔══██╗██║   ██║██║██╔════╝██╔════╝
# ███████╗█████╗  ██████╔╝██║   ██║██║██║     █████╗
# ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██║██║     ██╔══╝
# ███████║███████╗██║  ██║ ╚████╔╝ ██║╚██████╗███████╗
# ╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚═╝ ╚═════╝╚══════╝
apiVersion: v1
kind: Service
metadata:
    name: front-service
spec:
    type: NodePort
    selector:
        app: front
    ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080

---
# ██╗███╗   ██╗ ██████╗ ██████╗ ███████╗███████╗███████╗
# ██║████╗  ██║██╔════╝ ██╔══██╗██╔════╝██╔════╝██╔════╝
# ██║██╔██╗ ██║██║  ███╗██████╔╝█████╗  ███████╗███████╗
# ██║██║╚██╗██║██║   ██║██╔══██╗██╔══╝  ╚════██║╚════██║
# ██║██║ ╚████║╚██████╔╝██║  ██║███████╗███████║███████║
# ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: front-ingress
    generation: 1
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        field.cattle.io/description: act4ecodesign-front-proxy
        nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
        nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
spec:
    ingressClassName: nginx
    rules:
        - host: fileforge.egis-group.com
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: front-service
                            port:
                                number: 8080
    tls:
        - hosts:
              - fileforge.egis-group.com
          secretName: letsencrypt-tls
